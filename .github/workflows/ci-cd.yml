name: MCP Debugger CI/CD

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release
  VCPKG_BINARY_SOURCES: clear;nuget,GitHub,readwrite

jobs:
  # =======================================
  # Windows Build & Test
  # =======================================
  windows-build:
    runs-on: windows-2022
    strategy:
      matrix:
        platform: [x64, x86]
        config: [Release, Debug]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3

    - name: Setup CMake
      uses: lukka/get-cmake@latest

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgGitCommitId: '2024.01.12'

    - name: Cache Dependencies
      uses: actions/cache@v3
      with:
        path: |
          build
          vcpkg/installed
        key: ${{ runner.os }}-${{ matrix.platform }}-${{ matrix.config }}-${{ hashFiles('**/CMakeLists.txt') }}

    - name: Configure CMake
      run: |
        cmake -B build -A ${{ matrix.platform }} `
          -DCMAKE_BUILD_TYPE=${{ matrix.config }} `
          -DBUILD_TESTS=ON `
          -DBUILD_PLUGIN=ON `
          -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake"

    - name: Build Project
      run: cmake --build build --config ${{ matrix.config }} --parallel 4

    - name: Run Unit Tests
      run: |
        cd build
        ctest --output-on-failure --build-config ${{ matrix.config }} --parallel 4

    - name: Run Integration Tests
      run: |
        python scripts/run_integration_tests.py --platform ${{ matrix.platform }} --config ${{ matrix.config }}

    - name: Static Analysis
      if: matrix.config == 'Release'
      run: |
        # Run PVS-Studio or similar
        python scripts/static_analysis.py --target build

    - name: Package Artifacts
      if: matrix.config == 'Release'
      run: |
        python scripts/package.py --platform ${{ matrix.platform }} --output artifacts/

    - name: Upload Artifacts
      if: matrix.config == 'Release'
      uses: actions/upload-artifact@v3
      with:
        name: mcp-debugger-${{ matrix.platform }}
        path: artifacts/

  # =======================================
  # Security & Quality Checks
  # =======================================
  security-scan:
    runs-on: windows-2022
    needs: windows-build
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Run Security Scan
      run: |
        python scripts/security_scan.py

    - name: Check API Key Security
      run: |
        python scripts/check_secrets.py

    - name: Vulnerability Assessment
      run: |
        # Check for known vulnerabilities in dependencies
        python scripts/vuln_check.py

  # =======================================
  # Performance Testing
  # =======================================
  performance-test:
    runs-on: windows-2022
    needs: windows-build
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: mcp-debugger-x64

    - name: Setup Test Environment
      run: |
        python scripts/setup_perf_env.py

    - name: Run Performance Tests
      run: |
        python scripts/performance_tests.py --iterations 100

    - name: Memory Leak Tests
      run: |
        python scripts/memory_tests.py --duration 300

  # =======================================
  # x64dbg Integration Testing
  # =======================================
  x64dbg-integration:
    runs-on: windows-2022
    needs: windows-build
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: mcp-debugger-x64

    - name: Install x64dbg
      run: |
        python scripts/install_x64dbg.py --version latest

    - name: Test Plugin Loading
      run: |
        python scripts/test_plugin_integration.py

    - name: Test Command Interface
      run: |
        python scripts/test_x64dbg_commands.py

  # =======================================
  # Release Build & Deploy
  # =======================================
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-2022
    needs: [windows-build, security-scan, performance-test, x64dbg-integration]
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download All Artifacts
      uses: actions/download-artifact@v3

    - name: Create Release Package
      run: |
        python scripts/create_release.py --version ${GITHUB_REF#refs/tags/}

    - name: Sign Binaries
      run: |
        # Code signing for Windows binaries
        python scripts/sign_binaries.py

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: MCP Debugger ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      run: |
        python scripts/upload_assets.py --tag ${GITHUB_REF#refs/tags/}